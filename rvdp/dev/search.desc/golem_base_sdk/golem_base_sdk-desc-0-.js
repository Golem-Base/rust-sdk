searchState.loadedDescShard("golem_base_sdk", 0, "This is part of the Golem Base project, which is designed …\nRe-export commonly used types from <code>alloy</code>. An Ethereum …\nA signer instantiated with a locally stored private key.\nAn Ethereum ECDSA signature.\nA parsed URL record.\nArray of Zero bytes.\nReturns the byte-array representation of this signature.\nReturns the ERC-2098 compact representation of this …\nReturn the serialization of this URL.\nReturn the authority of this URL as an ASCII string.\nComputes the bitwise AND of two <code>FixedBytes</code>.\nComputes the bitwise OR of two <code>FixedBytes</code>.\nComputes the bitwise XOR of two <code>FixedBytes</code>.\nReturn whether this URL is a cannot-be-a-base URL, meaning …\nModule for GolemBase client functionality. Exposes the …\nCompile-time equality. NOT constant-time equality.\nReturns <code>true</code> if all bits set in <code>b</code> are also set in <code>self</code>.\nComputes the <code>create</code> address for this address and nonce:\nComputes the <code>CREATE2</code> address of a smart contract as …\nComputes the <code>CREATE2</code> address of a smart contract as …\nComputes the address created by the <code>EOFCREATE</code> opcode, …\nDecode an RLP-encoded VRS signature. Accepts <code>decode_parity</code> …\nIf this URL has a host and it is a domain name (not an IP …\nModule for GolemBase entities and data types. Defines core …\nModule for Ethereum transaction-related functionality. …\nModule for event handling. Contains types and utilities …\nReturn this URL’s fragment identifier, if any.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nParses a signature from a byte slice, with a v value\nConvert a directory name as <code>std::path::Path</code> into an URL in …\nDecode the signature from the ERC-2098 compact …\nConvert a file name as <code>std::path::Path</code> into an URL in the …\nConverts an ECDSA signing key to its corresponding …\nConverts an ECDSA verifying key to its corresponding …\nParses a 65-byte long raw signature.\nParses a 65-byte long raw signature.\nInstantiate by hashing public key bytes.\nCreates a <code>Signature</code> from the serialized <code>r</code> and <code>s</code> scalar …\nInstantiate from a signature and recovery id\nCreate a new byte array from the given slice <code>src</code>.\nCreates an Ethereum address from an EVM word’s upper 20 …\nReturn whether the URL has an ‘authority’, which can …\nEquivalent to <code>url.host().is_some()</code>.\nReturn the parsed representation of the host for this URL. …\nReturn the string representation of the host (domain or IP …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the inner bytes array.\nReturns the inner ECDSA signature.\nReturn the serialization of this URL.\nLeft-pads the address to 32 bytes (EVM word size).\nReturn whether the URL is special (has a special scheme)\nParse a string as an URL, with this URL as the base URL.\nRe-export commonly used types from <code>alloy</code>. Simple interface …\nCreate a new byte array from the given slice <code>src</code>, …\nReturns the size of this array in bytes.\nCreates a relative URL if possible, with this URL as the …\nWraps the given byte array in this type.\nInstantiate a new signature from <code>r</code>, <code>s</code>, and <code>v</code> values.\nNormalizes the signature into “low S” form as …\nNormalizes the signature into “low S” form as …\nReturn a default <code>ParseOptions</code> that can fully configure the …\nReturn the origin of this URL (…\nParse an absolute URL from a string.\nParse an Ethereum address, verifying its EIP-55 checksum.\nParse an absolute URL from a string and add params to its …\nReturn the password for this URL, if any, as a …\nReturn the path for this URL, as a percent-encoded ASCII …\nUnless this URL is cannot-be-a-base, return an iterator of …\nReturn an object with methods to manipulate this URL’s …\nReturn the port number for this URL, if any.\nReturn the port number for this URL, or the default port …\nReturn this URL’s query string, if any, as a …\nParse the URL’s query string, if any, as …\nManipulate this URL’s query string, viewed as a sequence …\nReturns the <code>r</code> component of this signature.\nReturns the recovery ID.\nRecovers an <code>Address</code> from this signature and the given …\nRecovers an <code>Address</code> from this signature and the given …\nRecovers a <code>VerifyingKey</code> from this signature and the given …\nRecovers a <code>VerifyingKey</code> from this signature and the given …\nCreates a new byte array where all bytes are set to <code>byte</code>.\nCreate a new byte array from the given slice <code>src</code>, …\nLength of RLP RS field encoding\nModule for JSON-RPC-related functionality. Contains …\nReturns the <code>s</code> component of this signature.\nReturn the scheme of this URL, lower-cased, as an ASCII …\nChange this URL’s fragment identifier.\nChange this URL’s host.\nChange this URL’s host to the given IP address.\nChange this URL’s password.\nChange this URL’s path.\nChange this URL’s port number.\nChange this URL’s query string. If <code>query</code> is <code>None</code>, this …\nChange this URL’s scheme.\nChange this URL’s username.\nResolve a URL’s host and port number to <code>SocketAddr</code>.\nEncodes an Ethereum address to its EIP-55 checksum into a …\nEncodes an Ethereum address to its EIP-55 checksum into a …\nEncodes an Ethereum address to its EIP-55 checksum into …\nAssuming the URL is in the <code>file</code> scheme or similar, convert …\nReturns the inner ECDSA signature.\nParses a 65-byte long raw signature.\n<code>ToString::to_string</code>, but without panic on OOM.\n<code>ToString::to_string</code>, but without panic on OOM.\n<code>ToString::to_string</code>, but without panic on OOM.\nReturn the username for this URL (typically the empty …\nModule with utility functions. Includes helpers for …\nReturns the recovery ID as a <code>bool</code>.\nCreates a new byte array with the last byte set to <code>x</code>.\nSets the recovery ID by normalizing a <code>v</code> value.\nWrite R and S to an RLP buffer in progress.\nWrite the VRS to the output.\nA client for interacting with the GolemBase system. …\nUse builder syntax to set the inputs and finish with …\nA client for interacting with the GolemBase system. …\nUse builder syntax to set the inputs and finish with …\nTracks and assigns sequential Ethereum nonces for …\nLast known on-chain nonce.\nFinishes building and performs the requested action.\nFinishes building and performs the requested action.\nCreates a new builder for <code>GolemBaseClient</code> with the given …\nCreates a new builder for <code>GolemBaseClient</code> with the given …\nMarks a transaction as completed by decrementing the …\nCreates one or more new entities in GolemBase and returns …\nCreates and sends a raw transaction to the GolemBase …\nDeletes one or more entities in GolemBase and returns …\nExtends the BTL (block time to live) of one or more …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGets the entity keys of all entities in GolemBase. Returns …\nGets an account’s ETH balance as a <code>BigDecimal</code>.\nGets the chain ID from the provider. Returns the chain ID …\nGets the current block number from the chain. Returns the …\nGets the entity keys of all entities owned by the given …\nGets all entity keys for entities that will expire at the …\nGets the total count of entities in GolemBase. Returns the …\nGets metadata for a specific entity. Returns an …\nGets the Ethereum address of the client owner.\nGets the underlying Reqwest client used for HTTP requests.\nGets the storage value associated with the given entity …\nNumber of in-flight (pending) transactions.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\n<em><strong>Optional</strong> (Some / Option setters).</em>\nReturns the next available nonce and increments the …\n<em><strong>Optional</strong> (Some / Option setters).</em>\nQueries entities in GolemBase based on annotations. …\nQueries entities in GolemBase based on annotations and …\n<em><strong>Required.</strong></em>\n<em><strong>Required.</strong></em>\nUpdates one or more entities in GolemBase and returns …\n<em><strong>Required.</strong></em>\nA generic key-value pair structure for entity annotations. …\nType representing a create transaction in GolemBase. Used …\nRepresents the result of deleting an entity. Contains the …\nRepresents an entity with data, BTL, and annotations. Used …\nRepresents the result of creating or updating an entity. …\nType representing an extend transaction in GolemBase. Used …\nRepresents the result of extending an entity’s BTL. …\nType alias for a delete operation (just the entity key).\nType representing a transaction in GolemBase, including …\nA type alias for the hash used to identify entities in …\nType alias for the key used in annotations.\nType alias for numeric annotations (key-value pairs with …\nType alias for string annotations (key-value pairs with …\nType representing an update transaction in GolemBase. Used …\nAdds a numeric annotation to the entity. Returns the …\nAdds a numeric annotation to the entity. Returns the …\nAdds a string annotation to the entity. Returns the …\nAdds a string annotation to the entity. Returns the …\nThe block-to-live (BTL) for the entity.\nThe updated block-to-live (BTL) for the entity.\nThe block-to-live (BTL) for the entity.\nA list of entities to create.\nThe data associated with the entity.\nThe updated data for the entity.\nThe data associated with the entity.\nA list of entity keys to delete.\nReturns the RLP-encoded bytes of the transaction. Useful …\nThe key of the entity to update.\nThe key of the entity to extend.\nThe key of the entity.\nThe key of the entity.\nThe key of the entity that was deleted.\nThe block number at which the entity expires.\nA list of entities to extend.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCreates a new <code>Create</code> request from any type that can be …\nCreates a new <code>Update</code> request from any type that can be …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe key of the annotation.\nThe key of the annotation.\nThe key of the annotation.\nCreates a new key-value pair annotation. Accepts any types …\nCreates a new <code>Create</code> operation with empty annotations. …\nCreates a new <code>Update</code> operation with empty annotations. …\nCreates a new <code>Update</code> operation with empty annotations. …\nThe new expiration block of the entity.\nThe number of blocks to extend the BTL by.\nNumeric annotations for the entity.\nUpdated numeric annotations for the entity.\nNumeric annotations for the entity.\nThe old expiration block of the entity.\nString annotations for the entity.\nUpdated string annotations for the entity.\nString annotations for the entity.\nA list of entities to update.\nThe value of the annotation.\nThe value of the annotation.\nThe value of the annotation.\nRepresents errors that can occur in the GolemBase ETH …\nFailed to decode expiration block: {0}\nModule containing a contract’s types and functions.\nThe Ethereum address of the GolemBase storage contract. …\nFailed to get transaction receipt: {0}\nFailed to send transaction: {0}\nUnexpected log data format\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\n<code>ToString::to_string</code>, but without panic on OOM.\nContainer for all the <code>GolemBaseABI</code> events.\nEvent with signature …\nEvent with signature …\nEvent with signature <code>GolemBaseStorageEntityDeleted(uint256)</code>…\nEvent with signature …\nAll the selectors of this enum.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nEntity was created. Contains the entity ID, block number, …\nEntity was extended. Contains the entity ID, block number, …\nEntity was removed. Contains the entity ID, block number, …\nEntity was updated. Contains the entity ID, block number, …\nRepresents a GolemBase event parsed from the blockchain …\nClient for subscribing to and streaming GolemBase events …\nListens for GolemBase events from the blockchain, starting …\nListens for GolemBase events starting from a specific …\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreates a new <code>EventsClient</code> by connecting to the given …\nAttempts to parse a blockchain log into a <code>Event</code>. Returns …\nThe block number where the event occurred\nThe block number where the event occurred\nThe block number where the event occurred\nThe block number where the event occurred\nThe ID of the created entity\nThe ID of the updated entity\nThe ID of the removed entity\nThe ID of the removed entity\nThe expiration block of the entity\nThe expiration block of the entity\nThe new expiration block\nThe old expiration block\nThe transaction hash that triggered the event\nThe transaction hash that triggered the event\nThe transaction hash that triggered the event\nThe transaction hash that triggered the event\nFailed to decode the base64-encoded storage value: {0}\nType representing metadata for an entity. Contains …\nRepresents errors that can occur in the GolemBase RPC …\nFailed to deserialize the RPC response: {0}\nFailed to send the RPC request: {0}\nRepresents a single search result from a query. Contains …\nUnexpected error occurred: {0}\nThe block number at which the entity expires.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nNumeric annotations for the entity.\nThe owner of the entity.\nThe payload associated with the entity.\nString annotations for the entity.\n<code>ToString::to_string</code>, but without panic on OOM.\nConverts the value to a UTF-8 string. Returns an error if …\nConverts an ETH amount to wei as a <code>U256</code>. Accepts a …\nConverts a wei amount (<code>U256</code>) to ETH as a <code>BigDecimal</code>. …")